{"ast":null,"code":"var _jsxFileName = \"F:\\\\tryReact\\\\driver\\\\src\\\\App.js\";\nimport React from \"react\";\nimport './App.css';\nimport { InfoWindow, withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { throwStatement } from \"@babel/types\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from 'react-google-autocomplete';\nimport Axios from 'axios';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nGeocode.setApiKey(\"AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4\");\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      zoom: 15,\n      height: 400,\n      mapPosition: {\n        lat: 13.84839475068859,\n        lng: 100.56908802639256\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerDestinationPosition: {\n        lat: 0,\n        lng: 0\n      },\n      locationList: []\n    };\n\n    this.onMarkerDragEnd = event => {\n      let newLat = event.latLng.lat();\n      let newLng = event.latLng.lng();\n      console.log('newLat', newLat);\n      console.log('newLng', newLng);\n      Geocode.fromLatLng(newLat, newLng).then(response => {\n        console.log(response);\n        const address = response.results[0].formatted_address,\n              addressArray = response.results[0].address_components,\n              city = this.getCity(addressArray),\n              area = this.getArea(addressArray),\n              state = this.getState(addressArray);\n        this.setState({\n          address: address ? address : \"\",\n          area: area ? area : \"\",\n          city: city ? city : \"\",\n          state: state ? state : \"\",\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          }\n        });\n      });\n    };\n\n    this.onPlaceSelected = place => {\n      const address = place.formatted_address,\n            addressArray = place.address_components,\n            city = this.getCity(addressArray),\n            area = this.getArea(addressArray),\n            state = this.getState(addressArray),\n            newLat = place.geometry.location.lat(),\n            newLng = place.geometry.location.lng();\n      this.setState({\n        adress: address ? address : \"\",\n        area: area ? area : \"\",\n        city: city ? city : \"\",\n        state: state ? state : \"\",\n        markerPosition: {\n          lat: newLat,\n          lng: newLng\n        },\n        mapPosition: {\n          lat: newLat,\n          lng: newLng\n        }\n      });\n    };\n\n    this.getLocation = () => {\n      Axios.get('http://localhost:3001/location').then(response => {\n        this.setState(state => {\n          this.state.locationList = response.data;\n        });\n        this.setState({\n          markerPosition: {\n            lat: parseFloat(this.state.locationList[this.state.locationList.length - 1].Latitude),\n            lng: parseFloat(this.state.locationList[this.state.locationList.length - 1].Longtitude)\n          }\n        });\n      });\n    };\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 15,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      } // defaultCenter={{ lat:13.84839475068859, lng: 100.56908802639256 }}\n      ,\n      defaultOptions: {\n        zoomControl: true,\n        scrollwheel: true,\n        streetViewControl: false,\n        draggable: true,\n        minZoom: 15,\n        maxZoom: 16,\n        mapTypeControl: false\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDragEnd,\n        position: {\n          lat: this.state.markerPosition.lat,\n          lng: this.state.markerPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDestinationDragEnd,\n        icon: {\n          url: \"/pictures/markerGreen.png\",\n          scaledSize: {\n            height: 40,\n            width: 27\n          }\n        },\n        position: {\n          lat: this.state.markerDestinationPosition.lat,\n          lng: this.state.markerDestinationPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-load-location\",\n        onClick: this.getLocation,\n        children: \"location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), this.userLocation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '1rem',\n        margin: '0 auto',\n        maxWidth: 600\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n        bordered: true,\n        children: /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Address\",\n          children: this.state.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapWithAMarker, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4&v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 27\n        }, this),\n        containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `400px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }, this),\n        mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["F:/tryReact/driver/src/App.js"],"names":["React","InfoWindow","withScriptjs","withGoogleMap","GoogleMap","Marker","Geocode","throwStatement","Descriptions","AutoComplete","Axios","useState","setApiKey","App","Component","state","address","city","area","zoom","height","mapPosition","lat","lng","markerPosition","markerDestinationPosition","locationList","onMarkerDragEnd","event","newLat","latLng","newLng","console","log","fromLatLng","then","response","results","formatted_address","addressArray","address_components","getCity","getArea","getState","setState","onPlaceSelected","place","geometry","location","adress","getLocation","get","data","parseFloat","length","Latitude","Longtitude","render","MapWithAMarker","props","zoomControl","scrollwheel","streetViewControl","draggable","minZoom","maxZoom","mapTypeControl","onMarkerDestinationDragEnd","url","scaledSize","width","userLocation","padding","margin","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SACEC,UADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,SAJF,EAKEC,MALF,QAMO,mBANP;AAQA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,YAAT,QAA6B,MAA7B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACAL,OAAO,CAACM,SAAR,CAAkB,yCAAlB;;AAGA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINH,MAAAA,KAAK,EAAE,EAJD;AAKNI,MAAAA,IAAI,EAAE,EALA;AAMNC,MAAAA,MAAM,EAAE,GANF;AAONC,MAAAA,WAAW,EAAE;AACXC,QAAAA,GAAG,EAAE,iBADM;AAEXC,QAAAA,GAAG,EAAE;AAFM,OAPP;AAWNC,MAAAA,cAAc,EAAE;AACdF,QAAAA,GAAG,EAAE,CADS;AAEdC,QAAAA,GAAG,EAAE;AAFS,OAXV;AAeNE,MAAAA,yBAAyB,EAAC;AACxBH,QAAAA,GAAG,EAAC,CADoB;AAExBC,QAAAA,GAAG,EAAC;AAFoB,OAfpB;AAmBNG,MAAAA,YAAY,EAAC;AAnBP,KAFwB;;AAAA,SA2BhCC,eA3BgC,GA2BbC,KAAD,IAAW;AAE3B,UAAIC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaR,GAAb,EAAb;AACA,UAAIS,MAAM,GAAGH,KAAK,CAACE,MAAN,CAAaP,GAAb,EAAb;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACAzB,MAAAA,OAAO,CAAC4B,UAAR,CAAmBL,MAAnB,EAA2BE,MAA3B,EACGI,IADH,CACQC,QAAQ,IAAI;AAChBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACA,cAAMpB,OAAO,GAAGoB,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC;AAAA,cACEC,YAAY,GAAGH,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBG,kBADrC;AAAA,cAEEvB,IAAI,GAAG,KAAKwB,OAAL,CAAaF,YAAb,CAFT;AAAA,cAGErB,IAAI,GAAG,KAAKwB,OAAL,CAAaH,YAAb,CAHT;AAAA,cAIExB,KAAK,GAAG,KAAK4B,QAAL,CAAcJ,YAAd,CAJV;AAKA,aAAKK,QAAL,CAAc;AACZ5B,UAAAA,OAAO,EAAGA,OAAD,GAAYA,OAAZ,GAAsB,EADnB;AAEZE,UAAAA,IAAI,EAAGA,IAAD,GAASA,IAAT,GAAgB,EAFV;AAGZD,UAAAA,IAAI,EAAGA,IAAD,GAASA,IAAT,GAAgB,EAHV;AAIZF,UAAAA,KAAK,EAAGA,KAAD,GAAUA,KAAV,GAAkB,EAJb;AAKZS,UAAAA,cAAc,EAAE;AACdF,YAAAA,GAAG,EAAEO,MADS;AAEdN,YAAAA,GAAG,EAAEQ;AAFS,WALJ;AASZV,UAAAA,WAAW,EAAE;AACXC,YAAAA,GAAG,EAAEO,MADM;AAEXN,YAAAA,GAAG,EAAEQ;AAFM;AATD,SAAd;AAcD,OAtBH;AAwBD,KAzD+B;;AAAA,SA2DhCc,eA3DgC,GA2DbC,KAAD,IAAW;AAC3B,YAAM9B,OAAO,GAAG8B,KAAK,CAACR,iBAAtB;AAAA,YACEC,YAAY,GAAGO,KAAK,CAACN,kBADvB;AAAA,YAEEvB,IAAI,GAAG,KAAKwB,OAAL,CAAaF,YAAb,CAFT;AAAA,YAGErB,IAAI,GAAG,KAAKwB,OAAL,CAAaH,YAAb,CAHT;AAAA,YAIExB,KAAK,GAAG,KAAK4B,QAAL,CAAcJ,YAAd,CAJV;AAAA,YAKEV,MAAM,GAAGiB,KAAK,CAACC,QAAN,CAAeC,QAAf,CAAwB1B,GAAxB,EALX;AAAA,YAMES,MAAM,GAAGe,KAAK,CAACC,QAAN,CAAeC,QAAf,CAAwBzB,GAAxB,EANX;AAOA,WAAKqB,QAAL,CAAc;AACZK,QAAAA,MAAM,EAAGjC,OAAD,GAAYA,OAAZ,GAAsB,EADlB;AAEZE,QAAAA,IAAI,EAAGA,IAAD,GAASA,IAAT,GAAgB,EAFV;AAGZD,QAAAA,IAAI,EAAGA,IAAD,GAASA,IAAT,GAAgB,EAHV;AAIZF,QAAAA,KAAK,EAAGA,KAAD,GAAUA,KAAV,GAAkB,EAJb;AAKZS,QAAAA,cAAc,EAAE;AACdF,UAAAA,GAAG,EAAEO,MADS;AAEdN,UAAAA,GAAG,EAAEQ;AAFS,SALJ;AASZV,QAAAA,WAAW,EAAE;AACXC,UAAAA,GAAG,EAAEO,MADM;AAEXN,UAAAA,GAAG,EAAEQ;AAFM;AATD,OAAd;AAcD,KAjF+B;;AAAA,SAoFhCmB,WApFgC,GAoFlB,MAAM;AAClBxC,MAAAA,KAAK,CAACyC,GAAN,CAAU,gCAAV,EAA4ChB,IAA5C,CAAkDC,QAAD,IAAc;AAC7D,aAAKQ,QAAL,CAAc7B,KAAK,IAAE;AACjB,eAAKA,KAAL,CAAWW,YAAX,GAA0BU,QAAQ,CAACgB,IAAnC;AAEH,SAHD;AAIA,aAAKR,QAAL,CAAc;AACZpB,UAAAA,cAAc,EAAE;AACdF,YAAAA,GAAG,EAAE+B,UAAU,CAAC,KAAKtC,KAAL,CAAWW,YAAX,CAAwB,KAAKX,KAAL,CAAWW,YAAX,CAAwB4B,MAAxB,GAA+B,CAAvD,EAA0DC,QAA3D,CADD;AAEdhC,YAAAA,GAAG,EAAE8B,UAAU,CAAC,KAAKtC,KAAL,CAAWW,YAAX,CAAwB,KAAKX,KAAL,CAAWW,YAAX,CAAwB4B,MAAxB,GAA+B,CAAvD,EAA0DE,UAA3D;AAFD;AADJ,SAAd;AAOD,OAZD;AAeD,KApG+B;AAAA;;AAyGhCC,EAAAA,MAAM,GAAG;AACP,UAAMC,cAAc,GAAGxD,YAAY,CAACC,aAAa,CAACwD,KAAK,iBACrD,QAAC,SAAD;AAEE,MAAA,WAAW,EAAE,EAFf;AAGE,MAAA,aAAa,EAAE;AAAErC,QAAAA,GAAG,EAAE,KAAKP,KAAL,CAAWM,WAAX,CAAuBC,GAA9B;AAAmCC,QAAAA,GAAG,EAAE,KAAKR,KAAL,CAAWM,WAAX,CAAuBE;AAA/D,OAHjB,CAIE;AAJF;AAKE,MAAA,cAAc,EAAE;AACdqC,QAAAA,WAAW,EAAE,IADC;AAEdC,QAAAA,WAAW,EAAE,IAFC;AAGdC,QAAAA,iBAAiB,EAAE,KAHL;AAIdC,QAAAA,SAAS,EAAE,IAJG;AAKdC,QAAAA,OAAO,EAAE,EALK;AAMdC,QAAAA,OAAO,EAAE,EANK;AAOdC,QAAAA,cAAc,EAAE;AAPF,OALlB;AAAA,8BAgBE,QAAC,MAAD;AACE,QAAA,SAAS,EAAE,IADb;AAEE,QAAA,SAAS,EAAE,KAAKvC,eAFlB;AAGE,QAAA,QAAQ,EAAE;AAAEL,UAAAA,GAAG,EAAE,KAAKP,KAAL,CAAWS,cAAX,CAA0BF,GAAjC;AAAsCC,UAAAA,GAAG,EAAE,KAAKR,KAAL,CAAWS,cAAX,CAA0BD;AAArE;AAHZ;AAAA;AAAA;AAAA;AAAA,cAhBF,eAuBE,QAAC,MAAD;AACI,QAAA,SAAS,EAAE,IADf;AAEI,QAAA,SAAS,EAAE,KAAK4C,0BAFpB;AAGI,QAAA,IAAI,EAAE;AACJC,UAAAA,GAAG,EAAC,2BADA;AAEJC,UAAAA,UAAU,EAAC;AAACjD,YAAAA,MAAM,EAAE,EAAT;AAAckD,YAAAA,KAAK,EAAE;AAArB;AAFP,SAHV;AAQI,QAAA,QAAQ,EAAE;AAAEhD,UAAAA,GAAG,EAAE,KAAKP,KAAL,CAAWU,yBAAX,CAAqCH,GAA5C;AAAiDC,UAAAA,GAAG,EAAE,KAAKR,KAAL,CAAWU,yBAAX,CAAqCF;AAA3F;AARd;AAAA;AAAA;AAAA;AAAA,cAvBF,eAmCE;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAE,KAAK2B,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCF,EAoCG,KAAKqB,YApCR;AAAA;AAAA;AAAA;AAAA;AAAA,YAD+C,CAAd,CAAnC;AA4CA,wBAEE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,MAAM,EAAE,QAA3B;AAAqCC,QAAAA,QAAQ,EAAE;AAA/C,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,YAAD;AAAc,QAAA,QAAQ,MAAtB;AAAA,+BAIE,QAAC,YAAD,CAAc,IAAd;AAAmB,UAAA,KAAK,EAAC,SAAzB;AAAA,oBAAoC,KAAK3D,KAAL,CAAWC;AAA/C;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAHF,eASE,QAAC,cAAD;AACE,QAAA,YAAY,EAAC,+HADf;AAEE,QAAA,cAAc,eAAE;AAAK,UAAA,KAAK,EAAE;AAAEI,YAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFlB;AAGE,QAAA,gBAAgB,eAAE;AAAK,UAAA,KAAK,EAAE;AAAEA,YAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAHpB;AAIE,QAAA,UAAU,eAAE;AAAK,UAAA,KAAK,EAAE;AAAEA,YAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA;AAJd;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAuBD;;AA7K+B;;AAgLlC,eAAeP,GAAf","sourcesContent":["import React from \"react\";\nimport './App.css'\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\n\nimport Geocode from \"react-geocode\";\nimport { throwStatement } from \"@babel/types\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from 'react-google-autocomplete'\nimport Axios from 'axios'\nimport { useState } from 'react'\nGeocode.setApiKey(\"AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4\");\n\n\nclass App extends React.Component {\n\n  state = {\n    address: '',\n    city: '',\n    area: '',\n    state: '',\n    zoom: 15,\n    height: 400,\n    mapPosition: {\n      lat: 13.84839475068859,\n      lng: 100.56908802639256,\n    },\n    markerPosition: {\n      lat: 0,\n      lng: 0,\n    },\n    markerDestinationPosition:{\n      lat:0, \n      lng:0,\n  },\n    locationList:[]\n  }\n\n  \n  \n\n  onMarkerDragEnd = (event) => {\n\n    let newLat = event.latLng.lat();\n    let newLng = event.latLng.lng();\n    console.log('newLat', newLat);\n    console.log('newLng', newLng);\n    Geocode.fromLatLng(newLat, newLng)\n      .then(response => {\n        console.log(response)\n        const address = response.results[0].formatted_address,\n          addressArray = response.results[0].address_components,\n          city = this.getCity(addressArray),\n          area = this.getArea(addressArray),\n          state = this.getState(addressArray);\n        this.setState({\n          address: (address) ? address : \"\",\n          area: (area) ? area : \"\",\n          city: (city) ? city : \"\",\n          state: (state) ? state : \"\",\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n        })\n      })\n\n  }\n\n  onPlaceSelected = (place) => {\n    const address = place.formatted_address,\n      addressArray = place.address_components,\n      city = this.getCity(addressArray),\n      area = this.getArea(addressArray),\n      state = this.getState(addressArray),\n      newLat = place.geometry.location.lat(),\n      newLng = place.geometry.location.lng();\n    this.setState({\n      adress: (address) ? address : \"\",\n      area: (area) ? area : \"\",\n      city: (city) ? city : \"\",\n      state: (state) ? state : \"\",\n      markerPosition: {\n        lat: newLat,\n        lng: newLng\n      },\n      mapPosition: {\n        lat: newLat,\n        lng: newLng\n      },\n    })\n  }\n\n  \n  getLocation = () => {\n    Axios.get('http://localhost:3001/location').then((response) => {\n      this.setState(state=>{\n          this.state.locationList = response.data;\n          \n      })\n      this.setState({\n        markerPosition: {\n          lat: parseFloat(this.state.locationList[this.state.locationList.length-1].Latitude),\n          lng: parseFloat(this.state.locationList[this.state.locationList.length-1].Longtitude)\n        },\n      })\n      \n    });\n    \n\n  }\n  \n\n\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n      <GoogleMap\n\n        defaultZoom={15}\n        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n        // defaultCenter={{ lat:13.84839475068859, lng: 100.56908802639256 }}\n        defaultOptions={{\n          zoomControl: true,\n          scrollwheel: true,\n          streetViewControl: false,\n          draggable: true,\n          minZoom: 15,\n          maxZoom: 16,\n          mapTypeControl: false,\n        }}\n      >\n\n        <Marker\n          draggable={true}\n          onDragEnd={this.onMarkerDragEnd}\n          position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n\n        >\n        </Marker>\n        <Marker \n            draggable={true}\n            onDragEnd={this.onMarkerDestinationDragEnd}\n            icon={{\n              url:\"/pictures/markerGreen.png\",\n              scaledSize:{height: 40 , width: 27},\n            }}\n            \n            position={{ lat: this.state.markerDestinationPosition.lat, lng: this.state.markerDestinationPosition.lng }}\n            \n            >  \n          </Marker>\n        <button className=\"button-load-location\" onClick={this.getLocation}>location</button>\n        {this.userLocation}\n        \n\n\n        \n      </GoogleMap>\n    ));\n    return (\n\n      <div style={{ padding: '1rem', margin: '0 auto', maxWidth: 600 }}>\n        <h1>Driver</h1>\n\n        <Descriptions bordered>\n          {/* <Descriptions.Item label=\"City\">{this.state.city}</Descriptions.Item>\n        <Descriptions.Item label=\"Area\">{this.state.area}</Descriptions.Item>\n        <Descriptions.Item label=\"State\">{this.state.state}</Descriptions.Item> */}\n          <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\n        </Descriptions>\n        <MapWithAMarker\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4&v=3.exp&libraries=geometry,drawing,places\"\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `400px` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n\n        />\n        \n      </div>\n\n\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}