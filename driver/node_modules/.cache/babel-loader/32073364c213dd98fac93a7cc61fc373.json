{"ast":null,"code":"var _jsxFileName = \"F:\\\\tryReact\\\\driver\\\\src\\\\component\\\\QueueDriver.js\";\nimport ReactGoogleAutocomplete from 'react-google-autocomplete';\nimport './QueueDriver.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QueueDriver(props) {\n  let timeoutId1 = 0;\n  let timeoutId2 = 0;\n\n  const updateStatus = () => {\n    fetch(\"http://localhost:1234/response\").then(response => response.json()).then(data => {\n      console.log(data[0]);\n\n      if (data[0].status === \"false\") {\n        fetch(\"http://localhost:1234/response/1\", {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"id\": 1,\n            \"status\": \"true\"\n          })\n        }).catch(err => console.log(err));\n      }\n    });\n  };\n\n  const getLocation = () => {\n    fetch(\"http://localhost:1236/location\").then(response => response.json()).then(data => {\n      if (data[0].status === 'true') {\n        updateStatus();\n        clearInterval(timeoutId1);\n        clearInterval(timeoutId2);\n        props.handleForUpdate(data[0].latitudeStart, data[0].longtitudeStart, data[0].latitudeDestination, data[0].longtitudeDestination, null);\n      }\n    });\n  };\n\n  function showQueue(data) {\n    let queueList = document.querySelector('#queueList');\n    document.getElementById('queueList').innerHTML = ''; //let tmpQueueList = document.createElement('ul');\n\n    data.forEach(val => {\n      let myEl = document.createElement('span');\n      myEl.innerText = `1 : ${val.driver_name} `;\n      queueList.appendChild(myEl);\n    });\n  }\n\n  timeoutId1 = setInterval(() => {\n    fetch(\"http://localhost:1235/queueDriver\").then(response => response.json()).then(data => showQueue(data));\n  }, 1000);\n\n  function enQueue() {\n    fetch(\"http://localhost:1235/queueDriver\", {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"id\": 1,\n        \"driver_name\": \"driver1\"\n      })\n    }).then(response => console.log(response)).catch(err => console.log(err));\n    timeoutId2 = setInterval(getLocation, 1500);\n  }\n\n  function leaveQueue() {\n    fetch(\"http://localhost:1235/queueDriver/1\", {\n      method: 'delete'\n    }).then(response => console.log(response)).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"queue-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\u0E15\\u0E32\\u0E23\\u0E32\\u0E07\\u0E04\\u0E34\\u0E27\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"queue-list\",\n      id: \"queueList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-queue\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-enQueue\",\n        onClick: enQueue,\n        children: \" \\u0E40\\u0E02\\u0E49\\u0E32\\u0E04\\u0E34\\u0E27 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-leaveQueue\",\n        onClick: leaveQueue,\n        children: \" \\u0E2D\\u0E2D\\u0E01\\u0E04\\u0E34\\u0E27 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_c = QueueDriver;\n\nvar _c;\n\n$RefreshReg$(_c, \"QueueDriver\");","map":{"version":3,"sources":["F:/tryReact/driver/src/component/QueueDriver.js"],"names":["ReactGoogleAutocomplete","QueueDriver","props","timeoutId1","timeoutId2","updateStatus","fetch","then","response","json","data","console","log","status","method","headers","body","JSON","stringify","catch","err","getLocation","clearInterval","handleForUpdate","latitudeStart","longtitudeStart","latitudeDestination","longtitudeDestination","showQueue","queueList","document","querySelector","getElementById","innerHTML","forEach","val","myEl","createElement","innerText","driver_name","appendChild","setInterval","enQueue","leaveQueue"],"mappings":";AAAA,OAAOA,uBAAP,MAAoC,2BAApC;AACA,OAAO,mBAAP;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAEvC,MAAIC,UAAU,GAAC,CAAf;AACA,MAAIC,UAAU,GAAC,CAAf;;AAEA,QAAMC,YAAY,GAAG,MAAK;AACtBC,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADjB,EAECF,IAFD,CAEMG,IAAI,IAAE;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAhB;;AACA,UAAGA,IAAI,CAAC,CAAD,CAAJ,CAAQG,MAAR,KAAkB,OAArB,EAA6B;AACzBP,QAAAA,KAAK,CAAC,kCAAD,EAAoC;AACrCQ,UAAAA,MAAM,EAAE,KAD6B;AAErCC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX,WAF4B;AAKrCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,kBAAM,CADW;AAEjB,sBAAU;AAFO,WAAf;AAL+B,SAApC,CAAL,CAUCC,KAVD,CAUOC,GAAG,IAAIT,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAVd;AAWH;AACJ,KAjBD;AAkBH,GAnBD;;AAqBA,QAAMC,WAAW,GAAG,MAAM;AACtBf,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADrB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACd,UAAGA,IAAI,CAAC,CAAD,CAAJ,CAAQG,MAAR,KAAkB,MAArB,EAA4B;AACxBR,QAAAA,YAAY;AACZiB,QAAAA,aAAa,CAACnB,UAAD,CAAb;AACAmB,QAAAA,aAAa,CAAClB,UAAD,CAAb;AACAF,QAAAA,KAAK,CAACqB,eAAN,CAAsBb,IAAI,CAAC,CAAD,CAAJ,CAAQc,aAA9B,EAA6Cd,IAAI,CAAC,CAAD,CAAJ,CAAQe,eAArD,EAAuEf,IAAI,CAAC,CAAD,CAAJ,CAAQgB,mBAA/E,EAAoGhB,IAAI,CAAC,CAAD,CAAJ,CAAQiB,qBAA5G,EAAmI,IAAnI;AAEH;AACJ,KAVD;AAWC,GAZL;;AAcA,WAASC,SAAT,CAAmBlB,IAAnB,EAAwB;AACpB,QAAImB,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAhB;AACAD,IAAAA,QAAQ,CAACE,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,GAA+C,EAA/C,CAFoB,CAGpB;;AACAvB,IAAAA,IAAI,CAACwB,OAAL,CAAaC,GAAG,IAAI;AAChB,UAAIC,IAAI,GAAGN,QAAQ,CAACO,aAAT,CAAuB,MAAvB,CAAX;AACAD,MAAAA,IAAI,CAACE,SAAL,GAAkB,OAAMH,GAAG,CAACI,WAAY,GAAxC;AACAV,MAAAA,SAAS,CAACW,WAAV,CAAsBJ,IAAtB;AACH,KAJD;AAMH;;AAIDjC,EAAAA,UAAU,GAAGsC,WAAW,CAAC,MAAI;AACzBnC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADrB,EAEKF,IAFL,CAEUG,IAAI,IAAIkB,SAAS,CAAClB,IAAD,CAF3B;AAGH,GAJuB,EAItB,IAJsB,CAAxB;;AAYA,WAASgC,OAAT,GAAmB;AACfpC,IAAAA,KAAK,CAAC,mCAAD,EAAqC;AAClCQ,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFyB;AAKlCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,cAAM,CADW;AAEjB,uBAAe;AAFE,OAAf;AAL4B,KAArC,CAAL,CAUKX,IAVL,CAUUC,QAAQ,IAAGG,OAAO,CAACC,GAAR,CAAYJ,QAAZ,CAVrB,EAWKW,KAXL,CAWWC,GAAG,IAAIT,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAXlB;AAYAhB,IAAAA,UAAU,GAAGqC,WAAW,CAACpB,WAAD,EAAa,IAAb,CAAxB;AAEH;;AAED,WAASsB,UAAT,GAAsB;AAClBrC,IAAAA,KAAK,CAAC,qCAAD,EAAuC;AACpCQ,MAAAA,MAAM,EAAE;AAD4B,KAAvC,CAAL,CAIKP,IAJL,CAIUC,QAAQ,IAAGG,OAAO,CAACC,GAAR,CAAYJ,QAAZ,CAJrB,EAKKW,KALL,CAKWC,GAAG,IAAIT,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CALlB;AAMH;;AAID,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,EAAE,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAEsB,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAEC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;KAxGuB1C,W","sourcesContent":["import ReactGoogleAutocomplete from 'react-google-autocomplete';\r\nimport './QueueDriver.css'\r\n\r\nexport default function QueueDriver(props) {\r\n    \r\n    let timeoutId1=0;\r\n    let timeoutId2=0;\r\n\r\n    const updateStatus = () =>{\r\n        fetch(\"http://localhost:1234/response\")\r\n        .then(response=> response.json())\r\n        .then(data=>{\r\n            console.log(data[0]);\r\n            if(data[0].status ===\"false\"){\r\n                fetch(\"http://localhost:1234/response/1\",{\r\n                    method: 'put',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"id\": 1,\r\n                        \"status\": \"true\",\r\n                    })\r\n                })\r\n                .catch(err => console.log(err));\r\n            }\r\n        })\r\n    }\r\n\r\n    const getLocation = () => {\r\n        fetch(\"http://localhost:1236/location\")\r\n            .then(response=> response.json())\r\n            .then(data => {\r\n            if(data[0].status ==='true'){\r\n                updateStatus();\r\n                clearInterval(timeoutId1);\r\n                clearInterval(timeoutId2);\r\n                props.handleForUpdate(data[0].latitudeStart, data[0].longtitudeStart , data[0].latitudeDestination ,data[0].longtitudeDestination ,null )\r\n\r\n            }\r\n        })\r\n        }\r\n\r\n    function showQueue(data){\r\n        let queueList = document.querySelector('#queueList');\r\n        document.getElementById('queueList').innerHTML='';\r\n        //let tmpQueueList = document.createElement('ul');\r\n        data.forEach(val => {\r\n            let myEl = document.createElement('span');\r\n            myEl.innerText = `1 : ${val.driver_name} `;\r\n            queueList.appendChild(myEl);\r\n        })\r\n        \r\n    }\r\n    \r\n    \r\n    \r\n    timeoutId1 = setInterval(()=>{\r\n        fetch(\"http://localhost:1235/queueDriver\")\r\n            .then(response=> response.json())\r\n            .then(data => showQueue(data));\r\n    },1000)\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n    function enQueue() {\r\n        fetch(\"http://localhost:1235/queueDriver\",{\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"id\": 1,\r\n                    \"driver_name\": \"driver1\"\r\n                })\r\n            })\r\n            .then(response=> console.log(response))\r\n            .catch(err => console.log(err));\r\n        timeoutId2 = setInterval(getLocation,1500)\r\n        \r\n    }\r\n\r\n    function leaveQueue() {\r\n        fetch(\"http://localhost:1235/queueDriver/1\",{\r\n                method: 'delete',\r\n                \r\n            })\r\n            .then(response=> console.log(response))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    \r\n    return(\r\n        <div className=\"queue-container\">\r\n            <h4>ตารางคิว</h4>\r\n            <div className=\"queue-list\" id=\"queueList\"></div>\r\n            <div className=\"button-queue\">\r\n                <button className=\"button-enQueue\" onClick={enQueue}> เข้าคิว </button>\r\n                <button className=\"button-leaveQueue\" onClick={leaveQueue}> ออกคิว </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}