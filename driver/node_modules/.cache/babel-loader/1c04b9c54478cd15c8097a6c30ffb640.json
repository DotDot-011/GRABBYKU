{"ast":null,"code":"var _jsxFileName = \"F:\\\\tryReact\\\\driver\\\\src\\\\App.js\";\nimport React from \"react\";\nimport './App.css';\nimport { InfoWindow, withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { throwStatement } from \"@babel/types\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from 'react-google-autocomplete';\nimport Axios from 'axios';\nimport QueueUser from \"./component/QueueUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nGeocode.setApiKey(\"AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4\");\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      zoom: 15,\n      height: 400,\n      mapPosition: {\n        lat: 13.84839475068859,\n        lng: 100.56908802639256\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerDestinationPosition: {\n        lat: 0,\n        lng: 0\n      },\n      locationList: [],\n      queueUserAppear: null\n    };\n\n    this.updateStatus = () => {\n      fetch(\"http://localhost:1234/response\").then(response => response.json()).then(data => {\n        console.log(data[0]);\n\n        if (data[0].status === \"false\") {\n          fetch(\"http://localhost:1234/response/1\", {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              \"id\": 1,\n              \"status\": \"true\"\n            })\n          }).catch(err => console.log(err));\n        }\n      });\n    };\n\n    this.getLocation = () => {\n      this.updateStatus();\n      Axios.get('http://localhost:3001/location').then(response => {\n        this.setState(state => {\n          this.state.locationList = response.data;\n        });\n        this.setState({\n          markerPosition: {\n            lat: parseFloat(this.state.locationList[this.state.locationList.length - 1].LatitudeStart),\n            lng: parseFloat(this.state.locationList[this.state.locationList.length - 1].LongtitudeStart)\n          },\n          markerDestinationPosition: {\n            lat: parseFloat(this.state.locationList[this.state.locationList.length - 1].LatitudeDestination),\n            lng: parseFloat(this.state.locationList[this.state.locationList.length - 1].LongtitudeDestination)\n          }\n        });\n      });\n    };\n\n    this.queueUser = null;\n  }\n\n  render() {\n    if (!!!this.state.queueUserAppear) {\n      this.queueUser = /*#__PURE__*/_jsxDEV(QueueUser, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 27\n      }, this);\n    } else {\n      this.queueUser = null;\n    }\n\n    const MapWithAMarker = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 15,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      defaultOptions: {\n        zoomControl: true,\n        scrollwheel: true,\n        streetViewControl: false,\n        draggable: true,\n        minZoom: 15,\n        // maxZoom:16,\n        mapTypeControl: false,\n        restriction: {\n          latLngBounds: {\n            north: this.state.mapPosition.lat + 0.012,\n            south: this.state.mapPosition.lat - 0.012,\n            east: this.state.mapPosition.lng + 0.012,\n            west: this.state.mapPosition.lng - 0.012\n          },\n          strictBounds: false\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        draggable: false // onDragEnd={this.onMarkerDragEnd}\n        ,\n        position: {\n          lat: this.state.markerPosition.lat,\n          lng: this.state.markerPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        icon: {\n          url: \"/pictures/markerGreen.png\",\n          scaledSize: {\n            height: 40,\n            width: 27\n          }\n        },\n        position: {\n          lat: this.state.markerDestinationPosition.lat,\n          lng: this.state.markerDestinationPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-load-location\",\n        onClick: this.getLocation,\n        children: \"location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"app-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '1rem',\n          margin: '0 auto',\n          maxWidth: 600\n        },\n        children: [this.queueUser, /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Driver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapWithAMarker, {\n          googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4&v=3.exp&libraries=geometry,drawing,places\",\n          loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `100%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 33\n          }, this),\n          containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `400px`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 35\n          }, this),\n          mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `100%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["F:/tryReact/driver/src/App.js"],"names":["React","InfoWindow","withScriptjs","withGoogleMap","GoogleMap","Marker","Geocode","throwStatement","Descriptions","AutoComplete","Axios","QueueUser","setApiKey","App","Component","state","address","city","area","zoom","height","mapPosition","lat","lng","markerPosition","markerDestinationPosition","locationList","queueUserAppear","updateStatus","fetch","then","response","json","data","console","log","status","method","headers","body","JSON","stringify","catch","err","getLocation","get","setState","parseFloat","length","LatitudeStart","LongtitudeStart","LatitudeDestination","LongtitudeDestination","queueUser","render","MapWithAMarker","props","zoomControl","scrollwheel","streetViewControl","draggable","minZoom","mapTypeControl","restriction","latLngBounds","north","south","east","west","strictBounds","url","scaledSize","width","padding","margin","maxWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './App.css'\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\n\nimport Geocode from \"react-geocode\";\nimport { throwStatement } from \"@babel/types\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from 'react-google-autocomplete'\nimport Axios from 'axios'\nimport QueueUser from \"./component/QueueUser\";\nGeocode.setApiKey(\"AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4\");\n\n\nclass App extends React.Component {\n\n  state = {\n    address: '',\n    city: '',\n    area: '',\n    state: '',\n    zoom: 15,\n    height: 400,\n    mapPosition: {\n      lat: 13.84839475068859,\n      lng: 100.56908802639256,\n    },\n    markerPosition: {\n      lat: 0,\n      lng: 0,\n    },\n    markerDestinationPosition:{\n      lat:0, \n      lng:0,\n    },\n    locationList:[],\n    queueUserAppear:null,\n  }\n\n  updateStatus = () =>{\n    fetch(\"http://localhost:1234/response\")\n      .then(response=> response.json())\n      .then(data=>{\n        console.log(data[0]);\n        if(data[0].status ===\"false\"){\n            fetch(\"http://localhost:1234/response/1\",{\n                method: 'put',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    \"id\": 1,\n                    \"status\": \"true\",\n                })\n            })\n            .catch(err => console.log(err));\n        }\n      })\n  }\n  \n\n\n  \n  getLocation = () => {\n    this.updateStatus();\n    Axios.get('http://localhost:3001/location').then((response) => {\n      this.setState(state=>{\n          this.state.locationList = response.data;\n          \n      })\n      this.setState({\n        markerPosition: {\n          lat: parseFloat(this.state.locationList[this.state.locationList.length-1].LatitudeStart),\n          lng: parseFloat(this.state.locationList[this.state.locationList.length-1].LongtitudeStart),\n        },\n        markerDestinationPosition: {\n          lat: parseFloat(this.state.locationList[this.state.locationList.length-1].LatitudeDestination),\n          lng: parseFloat(this.state.locationList[this.state.locationList.length-1].LongtitudeDestination),\n        },\n        \n      })\n      \n    });\n    \n\n  }\n  \n  queueUser = null;\n\n  render() {\n        if(!!!this.state.queueUserAppear){\n          this.queueUser= <QueueUser/>\n        }\n        else{\n          this.queueUser= null;\n        }\n\n        const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n          <GoogleMap\n\n          defaultZoom={15}\n          defaultCenter={{ lat:this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n          \n          \n          defaultOptions={{\n            \n            zoomControl:true,\n            scrollwheel:true,\n            streetViewControl: false,\n            draggable:true,\n            minZoom:15,\n            // maxZoom:16,\n            mapTypeControl:false,\n            restriction:{\n              latLngBounds:{\n                north: this.state.mapPosition.lat+ 0.012,\n                south: this.state.mapPosition.lat - 0.012,\n                east: this.state.mapPosition.lng + 0.012,\n                west: this.state.mapPosition.lng - 0.012,\n              },\n              strictBounds: false,\n            },\n          }}\n          >\n\n        <Marker\n          draggable={false}\n          // onDragEnd={this.onMarkerDragEnd}\n          position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n\n        >\n        </Marker>\n        <Marker \n            \n            icon={{\n              url:\"/pictures/markerGreen.png\",\n              scaledSize:{height: 40 , width: 27},\n            }}\n            \n            position={{ lat: this.state.markerDestinationPosition.lat, lng: this.state.markerDestinationPosition.lng }}\n            \n            >  \n          </Marker>\n        <button className=\"button-load-location\" onClick={this.getLocation}>location</button>\n        \n        \n\n\n        \n      </GoogleMap>\n    ));\n    return (\n      <section className=\"app-section\">\n        \n        <div style={{ padding: '1rem', margin: '0 auto', maxWidth: 600 }}>\n        {this.queueUser}\n          <h1>Driver</h1>\n\n          {/* <Descriptions bordered>\n            <Descriptions.Item label=\"City\">{this.state.city}</Descriptions.Item>\n          <Descriptions.Item label=\"Area\">{this.state.area}</Descriptions.Item>\n          <Descriptions.Item label=\"State\">{this.state.state}</Descriptions.Item>\n            <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\n          </Descriptions> */}\n          <MapWithAMarker\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4&v=3.exp&libraries=geometry,drawing,places\"\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `400px` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n              /> \n          \n        </div>\n        \n      </section>\n\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}