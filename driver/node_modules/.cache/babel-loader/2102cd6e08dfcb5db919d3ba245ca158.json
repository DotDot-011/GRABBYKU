{"ast":null,"code":"var _jsxFileName = \"F:\\\\tryReact\\\\driver\\\\src\\\\App.js\";\nimport React from \"react\";\nimport './App.css';\nimport { InfoWindow, withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { throwStatement } from \"@babel/types\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from 'react-google-autocomplete';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nGeocode.setApiKey(\"AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4\");\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      zoom: 15,\n      height: 400,\n      mapPosition: {\n        lat: 13.84839475068859,\n        lng: 100.56908802639256\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerDestinationPosition: {\n        lat: 0,\n        lng: 0\n      },\n      locationList: []\n    };\n\n    this.getLocation = () => {\n      Axios.get('http://localhost:3001/location').then(response => {\n        this.setState(state => {\n          this.state.locationList = response.data;\n        });\n        this.setState({\n          markerPosition: {\n            lat: parseFloat(this.state.locationList[this.state.locationList.length - 1].LatitudeStart),\n            lng: parseFloat(this.state.locationList[this.state.locationList.length - 1].LongtitudeStart)\n          },\n          markerDestinationPosition: {\n            lat: parseFloat(this.state.locationList[this.state.locationList.length - 1].LatitudeDestination),\n            lng: parseFloat(this.state.locationList[this.state.locationList.length - 1].LongtitudeDestination)\n          }\n        });\n      });\n    };\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 15,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      defaultOptions: {\n        zoomControl: true,\n        scrollwheel: true,\n        streetViewControl: false,\n        draggable: true,\n        minZoom: 1,\n        // maxZoom:16,\n        mapTypeControl: false,\n        restriction: {\n          latLngBounds: {\n            north: this.state.mapPosition.lat + 0.01225,\n            south: this.state.mapPosition.lat - 0.01225,\n            east: this.state.mapPosition.lng + 0.01225,\n            west: this.state.mapPosition.lng - 0.01225\n          },\n          strictBounds: true\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDragEnd,\n        position: {\n          lat: this.state.markerPosition.lat,\n          lng: this.state.markerPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        icon: {\n          url: \"/pictures/markerGreen.png\",\n          scaledSize: {\n            height: 40,\n            width: 27\n          }\n        },\n        position: {\n          lat: this.state.markerDestinationPosition.lat,\n          lng: this.state.markerDestinationPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-load-location\",\n        onClick: this.getLocation,\n        children: \"location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '1rem',\n        margin: '0 auto',\n        maxWidth: 600\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapWithAMarker, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4&v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 27\n        }, this),\n        containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `400px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this),\n        mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["F:/tryReact/driver/src/App.js"],"names":["React","InfoWindow","withScriptjs","withGoogleMap","GoogleMap","Marker","Geocode","throwStatement","Descriptions","AutoComplete","Axios","setApiKey","App","Component","state","address","city","area","zoom","height","mapPosition","lat","lng","markerPosition","markerDestinationPosition","locationList","getLocation","get","then","response","setState","data","parseFloat","length","LatitudeStart","LongtitudeStart","LatitudeDestination","LongtitudeDestination","render","MapWithAMarker","props","zoomControl","scrollwheel","streetViewControl","draggable","minZoom","mapTypeControl","restriction","latLngBounds","north","south","east","west","strictBounds","onMarkerDragEnd","url","scaledSize","width","padding","margin","maxWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './App.css'\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\n\nimport Geocode from \"react-geocode\";\nimport { throwStatement } from \"@babel/types\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from 'react-google-autocomplete'\nimport Axios from 'axios'\nGeocode.setApiKey(\"AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4\");\n\n\nclass App extends React.Component {\n\n  state = {\n    address: '',\n    city: '',\n    area: '',\n    state: '',\n    zoom: 15,\n    height: 400,\n    mapPosition: {\n      lat: 13.84839475068859,\n      lng: 100.56908802639256,\n    },\n    markerPosition: {\n      lat: 0,\n      lng: 0,\n    },\n    markerDestinationPosition:{\n      lat:0, \n      lng:0,\n    },\n    locationList:[],\n  }\n\n  \n  \n\n\n  \n  getLocation = () => {\n    Axios.get('http://localhost:3001/location').then((response) => {\n      this.setState(state=>{\n          this.state.locationList = response.data;\n          \n      })\n      this.setState({\n        markerPosition: {\n          lat: parseFloat(this.state.locationList[this.state.locationList.length-1].LatitudeStart),\n          lng: parseFloat(this.state.locationList[this.state.locationList.length-1].LongtitudeStart),\n        },\n        markerDestinationPosition: {\n          lat: parseFloat(this.state.locationList[this.state.locationList.length-1].LatitudeDestination),\n          lng: parseFloat(this.state.locationList[this.state.locationList.length-1].LongtitudeDestination),\n        },\n      })\n      \n    });\n    \n\n  }\n  \n\n\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n      <GoogleMap\n\n      defaultZoom={15}\n      defaultCenter={{ lat:this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n      \n      \n      defaultOptions={{\n        \n        zoomControl:true,\n        scrollwheel:true,\n        streetViewControl: false,\n        draggable:true,\n        minZoom:1,\n        // maxZoom:16,\n        mapTypeControl:false,\n        restriction:{\n          latLngBounds:{\n            north: this.state.mapPosition.lat+ 0.01225,\n            south: this.state.mapPosition.lat - 0.01225,\n            east: this.state.mapPosition.lng + 0.01225,\n            west: this.state.mapPosition.lng - 0.01225,\n          },\n          strictBounds: true,\n        },\n       }}\n      >\n\n        <Marker\n          draggable={true}\n          onDragEnd={this.onMarkerDragEnd}\n          position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n\n        >\n        </Marker>\n        <Marker \n            \n            icon={{\n              url:\"/pictures/markerGreen.png\",\n              scaledSize:{height: 40 , width: 27},\n            }}\n            \n            position={{ lat: this.state.markerDestinationPosition.lat, lng: this.state.markerDestinationPosition.lng }}\n            \n            >  \n          </Marker>\n        <button className=\"button-load-location\" onClick={this.getLocation}>location</button>\n        \n        \n\n\n        \n      </GoogleMap>\n    ));\n    return (\n\n      <div style={{ padding: '1rem', margin: '0 auto', maxWidth: 600 }}>\n        <h1>Driver</h1>\n\n        {/* <Descriptions bordered>\n          <Descriptions.Item label=\"City\">{this.state.city}</Descriptions.Item>\n        <Descriptions.Item label=\"Area\">{this.state.area}</Descriptions.Item>\n        <Descriptions.Item label=\"State\">{this.state.state}</Descriptions.Item>\n          <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\n        </Descriptions> */}\n        <MapWithAMarker\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4&v=3.exp&libraries=geometry,drawing,places\"\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `400px` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n\n        />\n        \n      </div>\n\n\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}