{"ast":null,"code":"var _jsxFileName = \"F:\\\\tryReact\\\\googlemap\\\\src\\\\App.js\";\nimport React from \"react\";\nimport './App.css';\nimport { InfoWindow, withScriptjs, withGoogleMap, GoogleMap, Marker, Polygon, geometry } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { throwStatement } from \"@babel/types\";\nimport { Descriptions } from 'antd';\nimport Autocomplete from 'react-google-autocomplete';\nimport Axios from 'axios';\nimport SizeContext from \"antd/lib/config-provider/SizeContext\";\nimport isPointInPolygon from \"geolib/es/isPointInPolygon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nGeocode.setApiKey(\"AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4\");\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      zoom: 15,\n      height: 400,\n      mapPosition: {\n        lat: 13.84839475068859,\n        lng: 100.56908802639256\n      },\n      markerPosition: {\n        lat: 13.84839475068859,\n        lng: 100.56908802639256\n      },\n      markerDestinationPosition: {\n        lat: 13.845451420870875,\n        lng: 100.56620611855851\n      },\n      showPlaceHolder: 'เลือกตำแหน่งของคุณ',\n      showPlaceHolderDestination: 'เลือกจุดหมาย'\n    };\n\n    this.findMylocation = () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.setState({\n          // mapPosition: {\n          //   lat: position.coords.latitude,\n          //   lng: position.coords.longitude\n          // },\n          markerPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          }\n        }, () => {\n          Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(response => {\n            const address = response.results[0].formatted_address,\n                  addressArray = response.results[0].address_components,\n                  city = this.getCity(addressArray),\n                  area = this.getArea(addressArray),\n                  state = this.getState(addressArray);\n            this.setState({\n              adress: address ? address : \"\",\n              area: area ? area : \"\",\n              city: city ? city : \"\",\n              state: state ? state : \"\"\n            });\n          });\n        });\n      });\n    };\n\n    this.getCountry = addressArray => {\n      let Country = '';\n\n      for (let index = 0; index < addressArray.length; index++) {\n        if (addressArray[index].types[0] && addressArray[index].types[0] === 'country') {\n          Country = addressArray[index].long_name;\n          return Country;\n        }\n      }\n    };\n\n    this.getCity = addressArray => {\n      let city = '';\n\n      for (let index = 0; index < addressArray.length; index++) {\n        if (addressArray[index].types[0] && 'administrative_area_level_1' === addressArray[index].types[0]) {\n          city = addressArray[index].long_name;\n          return city;\n        }\n      }\n    };\n\n    this.getArea = addressArray => {\n      let area = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0]) {\n          for (let j = 0; j < addressArray[i].types.length; j++) {\n            if ('sublocality_level_1' === addressArray[i].types[j]) {\n              area = addressArray[i].long_name;\n              return area;\n            }\n          }\n        }\n      }\n    };\n\n    this.getDistrict = addressArray => {\n      let District = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0]) {\n          for (let j = 0; j < addressArray[i].types.length; j++) {\n            if ('sublocality_level_2' === addressArray[i].types[j]) {\n              District = addressArray[i].long_name;\n              return District;\n            }\n          }\n        }\n      }\n    };\n\n    this.getStreet = addressArray => {\n      let Street = '';\n\n      for (let index = 0; index < addressArray.length; index++) {\n        if (addressArray[index].types[0] && addressArray[index].types[0] === 'route') {\n          Street = addressArray[index].long_name;\n          return Street;\n        }\n      }\n    };\n\n    this.getState = addressArray => {\n      let state = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        for (let i = 0; i < addressArray.length; i++) {\n          if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n            state = addressArray[i].long_name;\n            return state;\n          }\n        }\n      }\n    };\n\n    this.onMarkerDragEnd = event => {\n      let newLat = event.latLng.lat();\n      let newLng = event.latLng.lng();\n      console.log('newLat', newLat);\n      console.log('newLng', newLng);\n      Geocode.fromLatLng(newLat, newLng).then(response => {\n        console.log(response);\n        const address = response.results[0].formatted_address,\n              addressArray = response.results[0].address_components,\n              city = this.getCity(addressArray),\n              area = this.getArea(addressArray),\n              state = this.getState(addressArray);\n        this.setState({\n          address: address ? address : \"\",\n          area: area ? area : \"\",\n          city: city ? city : \"\",\n          state: state ? state : \"\",\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          }\n        });\n      });\n    };\n\n    this.onMarkerDestinationDragEnd = event => {\n      let newLat = event.latLng.lat();\n      let newLng = event.latLng.lng();\n      console.log('newLat', newLat);\n      console.log('newLng', newLng);\n      Geocode.fromLatLng(newLat, newLng).then(response => {\n        console.log(response);\n        const address = response.results[0].formatted_address,\n              addressArray = response.results[0].address_components,\n              city = this.getCity(addressArray),\n              area = this.getArea(addressArray),\n              state = this.getState(addressArray);\n        this.setState({\n          address: address ? address : \"\",\n          area: area ? area : \"\",\n          city: city ? city : \"\",\n          state: state ? state : \"\",\n          markerDestinationPosition: {\n            lat: newLat,\n            lng: newLng\n          }\n        });\n      });\n    };\n\n    this.onPlaceSelected = (place, input) => {\n      console.log(input);\n\n      if (!place.geometry) {\n        window.alert(\"No details available for input: '\" + place.name + \"'\");\n        return;\n      }\n\n      console.log(place);\n      const address = place.formatted_address,\n            addressArray = place.address_components,\n            city = this.getCity(addressArray),\n            area = this.getArea(addressArray),\n            state = this.getState(addressArray),\n            newLat = place.geometry.location.lat(),\n            newLng = place.geometry.location.lng();\n      this.setState({\n        adress: address ? address : \"\",\n        area: area ? area : \"\",\n        city: city ? city : \"\",\n        state: state ? state : \"\",\n        markerPosition: {\n          lat: newLat,\n          lng: newLng\n        },\n        showPlaceHolder: place.name + \" \" + address // mapPosition: {\n        //   lat: newLat,\n        //   lng: newLng\n        // },\n\n      });\n    };\n\n    this.onPlaceDestinationSelected = place => {\n      if (!place.geometry) {\n        window.alert(\"No details available for input: '\" + place.name + \"'\");\n        return;\n      }\n\n      const address = place.formatted_address,\n            addressArray = place.address_components,\n            city = this.getCity(addressArray),\n            area = this.getArea(addressArray),\n            state = this.getState(addressArray),\n            newLat = place.geometry.location.lat(),\n            newLng = place.geometry.location.lng();\n      this.setState({\n        adress: address ? address : \"\",\n        area: area ? area : \"\",\n        city: city ? city : \"\",\n        state: state ? state : \"\",\n        markerDestinationPosition: {\n          lat: newLat,\n          lng: newLng\n        },\n        showPlaceHolderDestination: place.name + \" \" + address\n      });\n    };\n\n    this.redZonePath = [{\n      latitude: 13.84680634471089,\n      longitude: 100.56479688230758\n    }, {\n      latitude: 13.848348039187117,\n      longitude: 100.56569906630881\n    }, {\n      latitude: 13.850380257189924,\n      longitude: 100.56586145942902\n    }, {\n      latitude: 13.850240104794747,\n      longitude: 100.57237522791787\n    }, {\n      latitude: 13.844213471850779,\n      longitude: 100.57230305319777\n    }, {\n      latitude: 13.842952063786939,\n      longitude: 100.57158130599677\n    }, {\n      latitude: 13.84680634471089,\n      longitude: 100.56479688230758\n    }];\n\n    this.addLocation = () => {\n      if (!isPointInPolygon({\n        latitude: this.state.markerPosition.lat,\n        longitude: this.state.markerPosition.lng\n      }, this.redZonePath) && !isPointInPolygon({\n        latitude: this.state.markerDestinationPosition.lat,\n        longitude: this.state.markerDestinationPosition.lng\n      }, this.redZonePath)) {\n        Axios.post('http://localhost:3001/create', {\n          LatitudeStart: this.state.markerPosition.lat,\n          LongtitudeStart: this.state.markerPosition.lng,\n          LatitudeDestination: this.state.markerDestinationPosition.lat,\n          LongtitudeDestination: this.state.markerDestinationPosition.lng\n        });\n      } else {\n        window.alert(\"Error\");\n      }\n    };\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 15,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      defaultOptions: {\n        zoomControl: true,\n        scrollwheel: true,\n        streetViewControl: false,\n        draggable: true,\n        minZoom: 1,\n        // maxZoom:16,\n        mapTypeControl: false,\n        restriction: {\n          latLngBounds: {\n            north: this.state.mapPosition.lat + 0.0122,\n            south: this.state.mapPosition.lat - 0.0122,\n            east: this.state.mapPosition.lng + 0.0122,\n            west: this.state.mapPosition.lng - 0.0122\n          },\n          strictBounds: true\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        placeholder: this.state.showPlaceHolder,\n        style: {\n          width: \"100%\",\n          height: '40px',\n          paddingLeft: 16,\n          marginTop: 7,\n          marginBottom: '2rem'\n        },\n        options: {\n          bounds: {\n            north: this.state.mapPosition.lat + 0.012,\n            south: this.state.mapPosition.lat - 0.012,\n            east: this.state.mapPosition.lng + 0.012,\n            west: this.state.mapPosition.lng - 0.012\n          },\n          strictBounds: true,\n          types: [\"establishment\"],\n          componentRestrictions: {\n            country: \"th\"\n          },\n          fields: [\"address_components\", \"formatted_address\", \"geometry\", \"icon\", \"name\"]\n        },\n        onPlaceSelected: this.onPlaceSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        placeholder: this.state.showPlaceHolderDestination,\n        style: {\n          width: \"100%\",\n          height: '40px',\n          paddingLeft: 16,\n          marginTop: 2,\n          marginBottom: '2rem'\n        },\n        options: {\n          bounds: {\n            north: this.state.mapPosition.lat + 0.012,\n            south: this.state.mapPosition.lat - 0.012,\n            east: this.state.mapPosition.lng + 0.012,\n            west: this.state.mapPosition.lng - 0.012\n          },\n          strictBounds: true,\n          types: [\"establishment\"],\n          componentRestrictions: {\n            country: \"th\"\n          },\n          fields: [\"address_components\", \"formatted_address\", \"geometry\", \"icon\", \"name\"]\n        },\n        onPlaceSelected: this.onPlaceDestinationSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDragEnd,\n        position: {\n          lat: this.state.markerPosition.lat,\n          lng: this.state.markerPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDestinationDragEnd,\n        icon: {\n          url: \"/pictures/markerGreen.png\",\n          scaledSize: {\n            height: 40,\n            width: 27\n          }\n        },\n        position: {\n          lat: this.state.markerDestinationPosition.lat,\n          lng: this.state.markerDestinationPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"button-currentLocation\",\n        onClick: this.findMylocation,\n        children: \"your location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-start\",\n        onClick: this.addLocation,\n        children: \"START\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Polygon, {\n        path: [{\n          lat: 13.84680634471089,\n          lng: 100.56479688230758\n        }, {\n          lat: 13.848348039187117,\n          lng: 100.56569906630881\n        }, {\n          lat: 13.850380257189924,\n          lng: 100.56586145942902\n        }, {\n          lat: 13.850240104794747,\n          lng: 100.57237522791787\n        }, {\n          lat: 13.844213471850779,\n          lng: 100.57230305319777\n        }, {\n          lat: 13.842952063786939,\n          lng: 100.57158130599677\n        }, {\n          lat: 13.84680634471089,\n          lng: 100.56479688230758\n        }],\n        options: {\n          strokeColor: \"yellow\",\n          strokeOpacity: 0.8,\n          strokeWeight: 3,\n          fillColor: \"yellow\",\n          fillOpacity: 0.35\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '1rem',\n        margin: '0 auto',\n        maxWidth: 600\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapWithAMarker, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4&v=3.exp&libraries=geometry,drawing,places\",\n        containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `400px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 29\n        }, this),\n        loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 27\n        }, this),\n        mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["F:/tryReact/googlemap/src/App.js"],"names":["React","InfoWindow","withScriptjs","withGoogleMap","GoogleMap","Marker","Polygon","geometry","Geocode","throwStatement","Descriptions","Autocomplete","Axios","SizeContext","isPointInPolygon","setApiKey","App","Component","state","address","city","area","zoom","height","mapPosition","lat","lng","markerPosition","markerDestinationPosition","showPlaceHolder","showPlaceHolderDestination","findMylocation","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","fromLatLng","then","response","results","formatted_address","addressArray","address_components","getCity","getArea","getState","adress","getCountry","Country","index","length","types","long_name","i","j","getDistrict","District","getStreet","Street","onMarkerDragEnd","event","newLat","latLng","newLng","console","log","onMarkerDestinationDragEnd","onPlaceSelected","place","input","window","alert","name","location","onPlaceDestinationSelected","redZonePath","addLocation","post","LatitudeStart","LongtitudeStart","LatitudeDestination","LongtitudeDestination","render","MapWithAMarker","props","zoomControl","scrollwheel","streetViewControl","draggable","minZoom","mapTypeControl","restriction","latLngBounds","north","south","east","west","strictBounds","width","paddingLeft","marginTop","marginBottom","bounds","componentRestrictions","country","fields","url","scaledSize","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","padding","margin","maxWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './App.css'\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  Polygon,\n  geometry,\n} from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { throwStatement } from \"@babel/types\";\nimport { Descriptions } from 'antd';\nimport Autocomplete from 'react-google-autocomplete'\nimport Axios from 'axios'\nimport SizeContext from \"antd/lib/config-provider/SizeContext\";\nimport isPointInPolygon from \"geolib/es/isPointInPolygon\"\nGeocode.setApiKey(\"AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4\");\n\nclass App extends React.Component {\n    \n    state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      zoom: 15,\n      height: 400,\n      mapPosition: {\n        lat: 13.84839475068859,\n        lng: 100.56908802639256,\n      },\n      markerPosition: {\n          lat: 13.84839475068859,\n          lng: 100.56908802639256,\n      },\n      markerDestinationPosition:{\n          lat:13.845451420870875, \n          lng:100.56620611855851,\n      },\n      showPlaceHolder:'เลือกตำแหน่งของคุณ',\n      showPlaceHolderDestination:'เลือกจุดหมาย',\n    }\n \n    findMylocation=()=>{\n        navigator.geolocation.getCurrentPosition(position=>{\n          this.setState({\n            // mapPosition: {\n            //   lat: position.coords.latitude,\n            //   lng: position.coords.longitude\n            // },\n            markerPosition: {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            }\n          },()=>{\n            Geocode.fromLatLng(position.coords.latitude,position.coords.longitude)\n              .then(response=>{\n                  const address = response.results[0].formatted_address,\n                        addressArray = response.results[0].address_components,\n                        city = this.getCity(addressArray),\n                        area= this.getArea(addressArray),\n                        state = this.getState(addressArray);\n                  this.setState({\n                    adress: (address) ? address : \"\",\n                    area: (area) ? area : \"\",\n                    city: (city) ? city : \"\",\n                    state: (state) ? state : \"\",\n            })\n          })\n          })\n        })\n    }\n    getCountry = (addressArray)=>{\n      let Country='';\n      for(let index = 0 ; index < addressArray.length ; index++){\n        if(addressArray[index].types[0] && addressArray[index].types[0]==='country'){\n          Country=addressArray[index].long_name;\n          return Country;\n        }\n\n      }\n    }\n    getCity = (addressArray) =>{\n      let city = '';\n      for (let index = 0 ; index < addressArray.length ;index++){\n        if(addressArray[index].types[0] && 'administrative_area_level_1'=== addressArray[index].types[0]){\n          city = addressArray[index].long_name;\n          return city;\n        }\n      }\n    }\n    //เขต/อำเภอ\n    getArea = (addressArray) => {\n      let area = '';\n      for (let i = 0; i < addressArray.length; i++) {\n          if (addressArray[i].types[0]) {\n              for (let j = 0; j < addressArray[i].types.length; j++) {\n                  if ('sublocality_level_1' === addressArray[i].types[j] ) {\n                      area = addressArray[i].long_name;\n                      return area;\n                  }\n              }\n          }\n      }\n    };\n    \n    getDistrict =(addressArray) => {\n      let District = '';\n      for (let i = 0; i < addressArray.length; i++) {\n          if (addressArray[i].types[0]) {\n              for (let j = 0; j < addressArray[i].types.length; j++) {\n                  if ('sublocality_level_2' === addressArray[i].types[j]) {\n                      District = addressArray[i].long_name;\n                      return District;\n                  }\n              }\n          }\n      }\n    };\n    getStreet = (addressArray)=>{\n      let Street='';\n      for(let index = 0 ; index < addressArray.length ; index++){\n        if(addressArray[index].types[0] && addressArray[index].types[0]==='route'){\n          Street=addressArray[index].long_name;\n          return Street;\n        }\n\n      }\n    }\n    getState = (addressArray) => {\n        let state = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            for (let i = 0; i < addressArray.length; i++) {\n                if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n                    state = addressArray[i].long_name;\n                    return state;\n                }\n            }\n        }\n    };   \n\n    onMarkerDragEnd = (event)=>{\n      \n      let newLat = event.latLng.lat();\n      let newLng= event.latLng.lng();\n      console.log('newLat',newLat);\n      console.log('newLng',newLng);\n      Geocode.fromLatLng(newLat,newLng)\n      .then(response=>{\n        console.log(response)\n        const address = response.results[0].formatted_address,\n              addressArray = response.results[0].address_components,\n              city = this.getCity(addressArray),\n              area= this.getArea(addressArray),\n              state = this.getState(addressArray);\n        this.setState({\n          address: (address) ? address : \"\",\n          area: (area) ? area : \"\",\n          city: (city) ? city : \"\",\n          state: (state) ? state : \"\",\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          \n        })\n      })\n      \n    }\n\n    onMarkerDestinationDragEnd = (event)=>{\n      \n      let newLat = event.latLng.lat();\n      let newLng= event.latLng.lng();\n      console.log('newLat',newLat);\n      console.log('newLng',newLng);\n      Geocode.fromLatLng(newLat,newLng)\n      .then(response=>{\n        console.log(response)\n        const address = response.results[0].formatted_address,\n              addressArray = response.results[0].address_components,\n              city = this.getCity(addressArray),\n              area= this.getArea(addressArray),\n              state = this.getState(addressArray);\n        this.setState({\n          address: (address) ? address : \"\",\n          area: (area) ? area : \"\",\n          city: (city) ? city : \"\",\n          state: (state) ? state : \"\",\n          markerDestinationPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          \n        })\n      })\n      \n    }\n    onPlaceSelected = (place,input)=>{\n      console.log(input)\n      if (!place.geometry) {\n        window.alert(\"No details available for input: '\" + place.name + \"'\");\n        return;\n      }\n      console.log(place)\n      const address = place.formatted_address,\n        addressArray = place.address_components,\n        city = this.getCity(addressArray),\n        area = this.getArea(addressArray),\n        state = this.getState(addressArray),\n        newLat = place.geometry.location.lat(),\n        newLng = place.geometry.location.lng();\n      this.setState({\n        adress: (address) ? address : \"\",\n        area: (area) ? area : \"\",\n        city: (city) ? city : \"\",\n        state: (state) ? state : \"\",\n        markerPosition: {\n          lat: newLat,\n          lng: newLng\n        },\n        showPlaceHolder:place.name+\" \"+address,\n        // mapPosition: {\n        //   lat: newLat,\n        //   lng: newLng\n        // },\n      })\n      \n    }\n    \n    onPlaceDestinationSelected = (place)=>{\n      if (!place.geometry) {\n        window.alert(\"No details available for input: '\" + place.name + \"'\");\n        return;\n      }\n      const address = place.formatted_address,\n        addressArray = place.address_components,\n        city = this.getCity(addressArray),\n        area = this.getArea(addressArray),\n        state = this.getState(addressArray),\n        newLat = place.geometry.location.lat(),\n        newLng = place.geometry.location.lng();\n      this.setState({\n        adress: (address) ? address : \"\",\n        area: (area) ? area : \"\",\n        city: (city) ? city : \"\",\n        state: (state) ? state : \"\",\n        markerDestinationPosition: {\n          lat: newLat,\n          lng: newLng\n        },\n        showPlaceHolderDestination:place.name+\" \"+address,\n      })\n    }\n    \n    redZonePath = [\n      {latitude: 13.84680634471089,longitude: 100.56479688230758},\n          {latitude: 13.848348039187117, longitude: 100.56569906630881},\n          {latitude:13.850380257189924, longitude:100.56586145942902},\n          {latitude:13.850240104794747, longitude:100.57237522791787},\n          {latitude:13.844213471850779, longitude:100.57230305319777},\n          {latitude:13.842952063786939, longitude:100.57158130599677},\n          {latitude: 13.84680634471089,longitude: 100.56479688230758},\n    ]\n\n    //sent location to database\n    addLocation = () =>{\n     if(!isPointInPolygon({latitude: this.state.markerPosition.lat, longitude: this.state.markerPosition.lng},this.redZonePath) && \n     !isPointInPolygon({latitude: this.state.markerDestinationPosition.lat, longitude: this.state.markerDestinationPosition.lng},this.redZonePath)){\n        Axios.post('http://localhost:3001/create',{\n        LatitudeStart: this.state.markerPosition.lat,\n        LongtitudeStart: this.state.markerPosition.lng,\n        LatitudeDestination: this.state.markerDestinationPosition.lat,\n        LongtitudeDestination: this.state.markerDestinationPosition.lng,\n        })\n     }\n     else{\n      window.alert(\"Error\");\n     } \n    }\n    \n    render(){\n      const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n        \n        <GoogleMap\n          \n          defaultZoom={15}\n          defaultCenter={{ lat:this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n          \n          \n          defaultOptions={{\n            \n            zoomControl:true,\n            scrollwheel:true,\n            streetViewControl: false,\n            draggable:true,\n            minZoom:1,\n            // maxZoom:16,\n            mapTypeControl:false,\n            restriction:{\n              latLngBounds:{\n                north: this.state.mapPosition.lat+ 0.0122,\n                south: this.state.mapPosition.lat - 0.0122,\n                east: this.state.mapPosition.lng + 0.0122,\n                west: this.state.mapPosition.lng - 0.0122,\n              },\n              strictBounds: true,\n            },\n           }}\n        >\n          <Autocomplete \n            placeholder={this.state.showPlaceHolder}\n            style={{width:\"100%\", height:'40px' , paddingLeft: 16 , marginTop:7 , marginBottom:'2rem'}}\n            options={\n              {\n                bounds:{\n                  north: this.state.mapPosition.lat+ 0.012,\n                  south: this.state.mapPosition.lat - 0.012,\n                  east: this.state.mapPosition.lng + 0.012,\n                  west: this.state.mapPosition.lng - 0.012,\n                },\n                strictBounds: true,\n                types: [\"establishment\"],\n                componentRestrictions :{\n                  country: \"th\",\n                },\n                fields: [\"address_components\",\"formatted_address\", \"geometry\", \"icon\", \"name\"],\n              }\n            }\n\n            onPlaceSelected={this.onPlaceSelected}\n            />\n            <Autocomplete \n            placeholder={this.state.showPlaceHolderDestination}\n            style={{width:\"100%\", height:'40px' , paddingLeft: 16 , marginTop:2 , marginBottom:'2rem'}}\n            options={\n              {\n                bounds:{\n                  north: this.state.mapPosition.lat+ 0.012,\n                  south: this.state.mapPosition.lat - 0.012,\n                  east: this.state.mapPosition.lng + 0.012,\n                  west: this.state.mapPosition.lng - 0.012,\n                },\n                strictBounds: true,\n                types: [\"establishment\"],\n                componentRestrictions :{\n                  country: \"th\",\n                },\n                fields: [\"address_components\",\"formatted_address\", \"geometry\", \"icon\", \"name\"],\n              }\n            }\n            onPlaceSelected={this.onPlaceDestinationSelected}\n            />\n          <Marker \n            draggable={true}\n            onDragEnd={this.onMarkerDragEnd}\n            position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n            \n            >  \n          </Marker>\n\n          <Marker \n            draggable={true}\n            onDragEnd={this.onMarkerDestinationDragEnd}\n            icon={{\n              url:\"/pictures/markerGreen.png\",\n              scaledSize:{height: 40 , width: 27},\n            }}\n            \n            position={{ lat: this.state.markerDestinationPosition.lat, lng: this.state.markerDestinationPosition.lng }}\n            \n            >  \n          </Marker>\n          \n          <button class=\"button-currentLocation\" onClick={this.findMylocation}>your location</button>\n\n          <button className=\"button-start\" onClick={this.addLocation}>START</button>\n\n          <Polygon\n              path={[\n                {lat: 13.84680634471089,lng: 100.56479688230758},\n                {lat: 13.848348039187117, lng: 100.56569906630881},\n                {lat:13.850380257189924, lng:100.56586145942902},\n                {lat:13.850240104794747, lng:100.57237522791787},\n                {lat:13.844213471850779, lng:100.57230305319777},\n                {lat:13.842952063786939, lng:100.57158130599677},\n                {lat: 13.84680634471089,lng: 100.56479688230758},\n              ]}\n              \n              options={\n                {\n                  strokeColor: \"yellow\",\n                  strokeOpacity: 0.8,\n                  strokeWeight: 3,\n                  fillColor: \"yellow\",\n                  fillOpacity: 0.35,\n                }\n              }\n          />\n        \n        </GoogleMap>\n      ));\n      return(\n        \n        <div style={{ padding: '1rem', margin: '0 auto', maxWidth: 600 }}>\n        <h1>User</h1>\n          \n        {/* <Descriptions bordered>\n          <Descriptions.Item label=\"City\">{this.state.city}</Descriptions.Item>\n          <Descriptions.Item label=\"Area\">{this.state.area}</Descriptions.Item>\n          <Descriptions.Item label=\"State\">{this.state.state}</Descriptions.Item>\n          <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\n        </Descriptions>         */}\n        \n        <MapWithAMarker\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4&v=3.exp&libraries=geometry,drawing,places\"\n          containerElement={<div style={{ height: `400px` }} />}\n          loadingElement={<div style={{ height: `100%` }} />}\n          \n          mapElement={<div style={{ height: `100%` }} />}\n          \n        />\n        \n        </div>\n        \n        \n      );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}