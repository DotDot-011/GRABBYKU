{"ast":null,"code":"var _jsxFileName = \"F:\\\\tryReact\\\\googlemap\\\\src\\\\App.js\";\nimport React from \"react\";\nimport './App.css';\nimport { InfoWindow, withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { throwStatement } from \"@babel/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nGeocode.setApiKey(\"AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4\");\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      zoom: 15,\n      height: 400,\n      mapPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      }\n    };\n\n    this.getCity = addressArray => {\n      let city = '';\n\n      for (let index = 0; index < addressArray.length; index++) {\n        if (addressArray[index].types[0] && 'administrative_area_level_2' === addressArray[index].types[0]) {\n          city = addressArray[index].long_name;\n          return city;\n        }\n      }\n    };\n\n    this.getArea = addressArray => {\n      let area = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0]) {\n          for (let j = 0; j < addressArray[i].types.length; j++) {\n            if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n              area = addressArray[i].long_name;\n              return area;\n            }\n          }\n        }\n      }\n    };\n\n    this.getState = addressArray => {\n      let state = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        for (let i = 0; i < addressArray.length; i++) {\n          if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n            state = addressArray[i].long_name;\n            return state;\n          }\n        }\n      }\n    };\n\n    this.onMarkerDragEnd = event => {\n      let newLat = event.latLng.lat();\n      let newLng = event.latLng.lng();\n      Geocode.fromLatLng(newLat, newLng).then(response => {\n        const address = response.results[0].formatted_address,\n              addressArray = response.results[0].address_components,\n              city = this.getCity(addressArray),\n              area = this.getArea(addressArray),\n              state = this.getState(addressArray);\n        this.setState({\n          adress: address ? address : \"\",\n          area: area ? area : \"\",\n          city: city ? city : \"\",\n          state: state ? state : \"\",\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          }\n        });\n      });\n    };\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 8,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDragEnd,\n        position: {\n          lat: this.state.mapPosition.lat,\n          lng: this.state.mapPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(MapWithAMarker, {\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4&v=3.exp&libraries=geometry,drawing,places\",\n      loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 27\n      }, this),\n      containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `400px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }, this),\n      mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["F:/tryReact/googlemap/src/App.js"],"names":["React","InfoWindow","withScriptjs","withGoogleMap","GoogleMap","Marker","Geocode","throwStatement","setApiKey","App","Component","state","address","city","area","zoom","height","mapPosition","lat","lng","markerPosition","getCity","addressArray","index","length","types","long_name","getArea","i","j","getState","onMarkerDragEnd","event","newLat","latLng","newLng","fromLatLng","then","response","results","formatted_address","address_components","setState","adress","render","MapWithAMarker","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './App.css'\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { throwStatement } from \"@babel/types\";\n\nGeocode.setApiKey(\"AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4\");\n\nclass App extends React.Component {\n\n    state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      zoom: 15,\n      height: 400,\n      mapPosition: {\n          lat: 0,\n          lng: 0,\n      },\n      markerPosition: {\n          lat: 0,\n          lng: 0,\n      }\n    }\n    getCity = (addressArray) =>{\n      let city = '';\n      for (let index = 0 ; index < addressArray.length ;index++){\n        if(addressArray[index].types[0] && 'administrative_area_level_2'=== addressArray[index].types[0]){\n          city = addressArray[index].long_name;\n          return city;\n        }\n      }\n    }\n    getArea = (addressArray) => {\n      let area = '';\n      for (let i = 0; i < addressArray.length; i++) {\n          if (addressArray[i].types[0]) {\n              for (let j = 0; j < addressArray[i].types.length; j++) {\n                  if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n                      area = addressArray[i].long_name;\n                      return area;\n                  }\n              }\n          }\n      }\n    };\n\n    getState = (addressArray) => {\n        let state = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            for (let i = 0; i < addressArray.length; i++) {\n                if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n                    state = addressArray[i].long_name;\n                    return state;\n                }\n            }\n        }\n    };   \n\n    onMarkerDragEnd = (event)=>{\n      let newLat = event.latLng.lat();\n      let newLng= event.latLng.lng();\n      Geocode.fromLatLng(newLat,newLng)\n      .then(response=>{\n        const address = response.results[0].formatted_address,\n              addressArray = response.results[0].address_components,\n              city = this.getCity(addressArray),\n              area= this.getArea(addressArray),\n              state = this.getState(addressArray);\n        this.setState({\n          adress: (address) ? address : \"\",\n          area: (area) ? area : \"\",\n          city: (city) ? city : \"\",\n          state: (state) ? state : \"\",\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n        })\n      })\n    }\n    \n  \n    render(){\n      const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n        <GoogleMap\n          defaultZoom={8}\n          defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n        >\n          <Marker \n            draggable={true}\n            onDragEnd={this.onMarkerDragEnd}\n            position={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n            \n            >\n            \n          </Marker>\n        </GoogleMap>\n      ));\n      return(\n        <MapWithAMarker\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDrjHmzaE-oExXPRlnkij2Ko3svtUwy9p4&v=3.exp&libraries=geometry,drawing,places\"\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `400px` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}