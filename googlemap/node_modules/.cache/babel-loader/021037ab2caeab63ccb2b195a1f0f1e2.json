{"ast":null,"code":"var _jsxFileName = \"F:\\\\tryReact\\\\googlemap\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleMaps extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.loadMap = (map, maps) => {\n      const cityCircle = new google.maps.Circle({\n        strokeColor: \"#FF0000\",\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: \"#FF0000\",\n        fillOpacity: 0.35,\n        map,\n        center: {\n          lat: 40.756795,\n          lng: -73.954298\n        },\n        radius: 10000,\n        draggable: true\n      });\n      let marker = new maps.Marker({\n        position: {\n          lat: 40.856795,\n          lng: -73.954298\n        },\n        map,\n        draggable: true\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"400px\",\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: \"AIzaSyDmK5n48lyPTTnG3RgONpyDW3IpaygueZ4\"\n        },\n        defaultCenter: {\n          lat: 40.756795,\n          lng: -73.954298\n        },\n        defaultZoom: 10,\n        yesIWantToUseGoogleMapApiInternals: true,\n        onGoogleApiLoaded: ({\n          map,\n          maps\n        }) => this.loadMap(map, maps)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default GoogleMaps;","map":{"version":3,"sources":["F:/tryReact/googlemap/src/App.js"],"names":["React","Component","GoogleMaps","loadMap","map","maps","cityCircle","google","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","center","lat","lng","radius","draggable","marker","Marker","position","render","height","width","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SACjCE,OADiC,GACvB,CAACC,GAAD,EAAMC,IAAN,KAAe;AACvB,YAAMC,UAAU,GAAG,IAAIC,MAAM,CAACF,IAAP,CAAYG,MAAhB,CAAuB;AACxCC,QAAAA,WAAW,EAAE,SAD2B;AAExCC,QAAAA,aAAa,EAAE,GAFyB;AAGxCC,QAAAA,YAAY,EAAE,CAH0B;AAIxCC,QAAAA,SAAS,EAAE,SAJ6B;AAKxCC,QAAAA,WAAW,EAAE,IAL2B;AAMxCT,QAAAA,GANwC;AAOxCU,QAAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE,SAAP;AAAkBC,UAAAA,GAAG,EAAE,CAAC;AAAxB,SAPgC;AAQxCC,QAAAA,MAAM,EAAE,KARgC;AASxCC,QAAAA,SAAS,EAAE;AAT6B,OAAvB,CAAnB;AAaH,UAAIC,MAAM,GAAG,IAAId,IAAI,CAACe,MAAT,CAAgB;AACtBC,QAAAA,QAAQ,EAAE;AAAEN,UAAAA,GAAG,EAAE,SAAP;AAAkBC,UAAAA,GAAG,EAAE,CAAC;AAAxB,SADY;AAEtBZ,QAAAA,GAFsB;AAGtBc,QAAAA,SAAS,EAAC;AAHY,OAAhB,CAAb;AAME,KArBgC;AAAA;;AAsBjCI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAZ;AAAA,6BACE,QAAC,cAAD;AACE,QAAA,gBAAgB,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP,SADpB;AAEE,QAAA,aAAa,EAAE;AAAEV,UAAAA,GAAG,EAAE,SAAP;AAAkBC,UAAAA,GAAG,EAAE,CAAC;AAAxB,SAFjB;AAGE,QAAA,WAAW,EAAE,EAHf;AAIE,QAAA,kCAAkC,MAJpC;AAKE,QAAA,iBAAiB,EAAE,CAAC;AAAEZ,UAAAA,GAAF;AAAOC,UAAAA;AAAP,SAAD,KAAmB,KAAKF,OAAL,CAAaC,GAAb,EAAkBC,IAAlB;AALxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAlCgC;;AAqCnC,eAAeH,UAAf","sourcesContent":["import React, { Component } from \"react\";\n\n\nclass GoogleMaps extends Component {\n  loadMap = (map, maps) => {\n    const cityCircle = new google.maps.Circle({\n      strokeColor: \"#FF0000\",\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: \"#FF0000\",\n      fillOpacity: 0.35,\n      map,\n      center: { lat: 40.756795, lng: -73.954298 },\n      radius: 10000,\n      draggable: true\n    });\n\n\n let marker = new maps.Marker({\n        position: { lat: 40.856795, lng: -73.954298  },\n        map,\n        draggable:true,\n      });\n\n  };\n  render() {\n    return (\n      <div style={{ height: \"400px\", width: \"100%\" }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyDmK5n48lyPTTnG3RgONpyDW3IpaygueZ4\" }}\n          defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\n          defaultZoom={10}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => this.loadMap(map, maps)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GoogleMaps;"]},"metadata":{},"sourceType":"module"}